2023-04-30 17:31:22,470{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin /Users/hangwang/code/go/src/bin/maelstrom-unique-id-generation --node-count 1 --time-limit 10
2023-04-30 17:31:22,532{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x307ca947"
         "maelstrom.db$db$reify__16142@307ca947"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x61fb3dae" "2023-04-30T17:31:22.428-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x9c88323"
         "maelstrom.net$jepsen_net$reify__15251@9c88323"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x6d4bdb75"
         "maelstrom.workload.echo$client$reify__16863@6d4bdb75"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x1dc47df3"
         "java.util.concurrent.CyclicBarrier@1dc47df3"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x256a25a8"
         "jepsen.checker$compose$reify__11881@256a25a8"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "/Users/hangwang/code/go/src/bin/maelstrom-unique-id-generation"
  "--node-count"
  "1"
  "--time-limit"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@68f67bbd"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@5bd585a5"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/hangwang/code/go/src/bin/maelstrom-unique-id-generation"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x292237cd"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@292237cd"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x797a5b31"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@797a5b31"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x13d7d1a8"
                                                    "maelstrom.workload.echo$workload$fn__16882@13d7d1a8"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x60035f1e"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x5827908c"
         "maelstrom.net$jepsen_os$reify__15254@5827908c"]
 :time-limit 10
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-04-30 17:31:24,397{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-04-30 17:31:24,398{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-04-30 17:31:24,400{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-04-30 17:31:24,403{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-04-30 17:31:24,404{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-04-30 17:31:24,405{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/hangwang/code/go/src/bin/maelstrom-unique-id-generation []
2023-04-30 17:31:24,605{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-04-30 17:31:24,620{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 96"
2023-04-30 17:31:24,645{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 96", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 96",
 :id "5b9d2418-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:24,834{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:echo	"Please echo 122"
2023-04-30 17:31:24,850{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 122", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 122",
 :id "5bbdb41c-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:25,185{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:echo	"Please echo 81"
2023-04-30 17:31:25,197{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 81", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 81",
 :id "5bf3354c-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:25,475{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:echo	"Please echo 78"
2023-04-30 17:31:25,487{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 78", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 78",
 :id "5c1f72f6-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:25,669{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:echo	"Please echo 82"
2023-04-30 17:31:25,680{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 82", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 82",
 :id "5c3d09b0-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:25,805{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:echo	"Please echo 90"
2023-04-30 17:31:25,815{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 90", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 90",
 :id "5c51c198-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:26,073{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:echo	"Please echo 57"
2023-04-30 17:31:26,081{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 57", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 57",
 :id "5c7aa860-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:26,366{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:echo	"Please echo 76"
2023-04-30 17:31:26,377{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 76", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 76",
 :id "5ca76e0e-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:26,692{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:echo	"Please echo 83"
2023-04-30 17:31:26,702{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 83", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 83",
 :id "5cd938c6-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:26,920{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:echo	"Please echo 106"
2023-04-30 17:31:26,929{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 106", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 106",
 :id "5cfbfd52-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:27,241{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:echo	"Please echo 4"
2023-04-30 17:31:27,250{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 4",
 :id "5d2ce20a-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:27,412{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:echo	"Please echo 8"
2023-04-30 17:31:27,421{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 8", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 8",
 :id "5d4704f0-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:27,619{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:echo	"Please echo 73"
2023-04-30 17:31:27,628{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 73", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 73",
 :id "5d668c4e-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:27,893{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:echo	"Please echo 27"
2023-04-30 17:31:27,902{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 27", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 27",
 :id "5d9063ac-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:28,166{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:echo	"Please echo 97"
2023-04-30 17:31:28,175{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 97", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 97",
 :id "5dba0b44-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:28,267{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:echo	"Please echo 116"
2023-04-30 17:31:28,276{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 116", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 116",
 :id "5dc9753e-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:28,448{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:echo	"Please echo 11"
2023-04-30 17:31:28,457{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 11", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 11",
 :id "5de521f8-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:28,560{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:echo	"Please echo 109"
2023-04-30 17:31:28,568{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 109", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 109",
 :id "5df6225a-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:28,919{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:echo	"Please echo 82"
2023-04-30 17:31:28,928{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 82", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 82",
 :id "5e2ced44-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,217{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:echo	"Please echo 54"
2023-04-30 17:31:29,225{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 54", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 54",
 :id "5e5a654e-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,562{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:echo	"Please echo 98"
2023-04-30 17:31:29,575{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 98", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 98",
 :id "5e8f1816-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,576{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:echo	"Please echo 99"
2023-04-30 17:31:29,583{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 99", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 99",
 :id "5e910db0-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,805{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:echo	"Please echo 71"
2023-04-30 17:31:29,814{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 71", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 71",
 :id "5eb42dfe-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,879{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:echo	"Please echo 66"
2023-04-30 17:31:29,887{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 66", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 66",
 :id "5ebf5594-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:29,944{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:echo	"Please echo 24"
2023-04-30 17:31:29,954{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 24", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 24",
 :id "5ec96944-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:30,226{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:echo	"Please echo 99"
2023-04-30 17:31:30,237{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 99", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 99",
 :id "5ef47bd4-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:30,549{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:echo	"Please echo 34"
2023-04-30 17:31:30,559{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 34", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 34",
 :id "5f25b050-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:30,885{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:echo	"Please echo 65"
2023-04-30 17:31:30,895{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 65", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 65",
 :id "5f590a54-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:31,056{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:echo	"Please echo 106"
2023-04-30 17:31:31,067{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 106", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 106",
 :id "5f731d36-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:31,137{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:echo	"Please echo 18"
2023-04-30 17:31:31,147{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 18", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 18",
 :id "5f7f7176-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:31,466{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:echo	"Please echo 11"
2023-04-30 17:31:31,476{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 11", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 11",
 :id "5fb1b82a-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:31,561{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:echo	"Please echo 64"
2023-04-30 17:31:31,571{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 64", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 64",
 :id "5fc01c6c-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:31,922{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:echo	"Please echo 47"
2023-04-30 17:31:31,931{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 47", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 47",
 :id "5ff72798-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:32,091{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:echo	"Please echo 15"
2023-04-30 17:31:32,101{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 15", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 15",
 :id "60110b2c-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:32,189{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:echo	"Please echo 67"
2023-04-30 17:31:32,198{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 67", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 67",
 :id "601fe20a-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:32,378{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:echo	"Please echo 125"
2023-04-30 17:31:32,387{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 125", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 125",
 :id "603cbc90-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:32,516{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:echo	"Please echo 60"
2023-04-30 17:31:32,532{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 60", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 60",
 :id "6051ef20-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:32,800{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:echo	"Please echo 102"
2023-04-30 17:31:32,810{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 102", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 102",
 :id "607d2960-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,031{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:echo	"Please echo 13"
2023-04-30 17:31:33,040{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 13", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 13",
 :id "60a05912-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,122{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:echo	"Please echo 118"
2023-04-30 17:31:33,131{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 118", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 118",
 :id "60ae38e8-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,331{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:echo	"Please echo 48"
2023-04-30 17:31:33,340{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 48", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 48",
 :id "60ce38dc-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,665{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:echo	"Please echo 98"
2023-04-30 17:31:33,674{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 98", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 98",
 :id "610121ca-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,841{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:echo	"Please echo 5"
2023-04-30 17:31:33,847{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 5", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 5",
 :id "611bfa18-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,885{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:echo	"Please echo 86"
2023-04-30 17:31:33,895{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 86", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 86",
 :id "6122cd48-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:33,907{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:echo	"Please echo 92"
2023-04-30 17:31:33,916{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 92", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 92",
 :id "61261782-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,143{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:echo	"Please echo 10"
2023-04-30 17:31:34,152{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 10", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 10",
 :id "614a1650-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,216{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:echo	"Please echo 125"
2023-04-30 17:31:34,225{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 125", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 125",
 :id "61553a6c-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,432{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:echo	"Please echo 46"
2023-04-30 17:31:34,441{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 46", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 46",
 :id "617627ae-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,520{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:echo	"Please echo 114"
2023-04-30 17:31:34,529{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 114", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 114",
 :id "618390c4-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:echo	"Please echo 0"
2023-04-30 17:31:34,616{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 0", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:echo "Please echo 0",
 :id "6190f4ee-e79e-11ed-ab3e-6003089eb06e",
 :in_reply_to 1,
 :msg_id 1,
 :type "generate_ok"}

This is malformed because:

{:type (not (= "echo_ok" "generate_ok")), :id disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-04-30 17:31:34,631{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2023-04-30 17:31:34,710{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
